
from aiogram import Bot, Dispatcher, types
from aiogram import executor
from weather_parser import parse_weather, all_parse_weather
from coordinates import get_city, City
from dotenv import load_dotenv
import os

load_dotenv()
bot=Bot(os.getenv('TOKEN'))
dp=Dispatcher(bot)

HELP_COMMAND = '''
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/weather</b> - <em>–ñ–º–∏, —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –ø–æ ip</em>

<em>–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥ –Ω–∏–∂–µ,
–∏ —è —Å–∫–∞–∂—É –ø–æ–≥–æ–¥—É</em>
'''


async def on_startup(_):
    print('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')
async def on_shutdown(_):
  print('–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')


@dp.message_handler(commands=['start'])
async def command_start(message: types.message):
    await message.answer(text=f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.username}</b>!üëã',parse_mode="HTML")
    await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É: {HELP_COMMAND}',parse_mode="HTML")


@dp.message_handler(commands=['help'])
async def command_help(message: types.message):
    await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É: {HELP_COMMAND}',parse_mode="HTML")


@dp.message_handler(commands=['weather'])
async def command_start(message: types.message):
    #await message.answer(text=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}!',)
    town = get_city()
    if town:
        weather_info = parse_weather(City(town))
        await message.answer(text=weather_info)
        await message.answer(text='–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ, –Ω–∞–ø–∏—à–∏ –µ–≥–æ')


@dp.message_handler()
async def command_any(message: types.Message):
    text = message.text.strip()

    if text == '1':
        town = get_city()
        if town:
            weather_info = parse_weather(City(town))
            await message.answer(text=weather_info)
        else:
            await message.answer(text='–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –≥–æ—Ä–æ–¥.')
    else:
        town = (message.text).capitalize()
        weather_info = all_parse_weather(town)
        await message.answer(text=weather_info)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup, on_shutdown=on_shutdown)
