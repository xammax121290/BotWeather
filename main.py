
from aiogram import Bot, Dispatcher, types
from aiogram import executor
from weather_parser import all_parse_weather
from dotenv import load_dotenv
import os

load_dotenv()
bot=Bot(os.getenv('TOKEN'))
dp=Dispatcher(bot)

HELP_COMMAND = '''
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>

<em>–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É </em>
<em>–Ω–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥ –Ω–∏–∂–µ</em>
'''


async def on_startup(_):
  print('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')


async def on_shutdown(_):
  print('–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')


@dp.message_handler(commands=['start'])
async def command_start(message: types.message):
  await message.answer(text=f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.username}</b>!üëã',
                       parse_mode="HTML")
  await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É: {HELP_COMMAND}',
                       parse_mode="HTML")


@dp.message_handler(commands=['help'])
async def command_help(message: types.message):
  await message.answer(text=f'–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É: {HELP_COMMAND}',
                       parse_mode="HTML")


@dp.message_handler()
async def command_any(message: types.Message):
  town = (message.text).capitalize()
  weather_info = all_parse_weather(town)
  await message.answer(text=weather_info)

if __name__ == '__main__':
  executor.start_polling(dp,
                         skip_updates=True,
                         on_startup=on_startup,
                         on_shutdown=on_shutdown)
